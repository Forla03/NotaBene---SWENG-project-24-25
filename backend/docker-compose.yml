services:
  postgres:
    image: postgres:16
    container_name: notabene-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - notabene-network

  postgres-test:
    image: postgres:16
    container_name: notabene-postgres-test
    environment:
      POSTGRES_DB: notabene_test
      POSTGRES_USER: notabene_user
      POSTGRES_PASSWORD: notabene_password
    ports:
      - "5433:5432"
    volumes:
      - pgdata-test:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notabene_user -d notabene_test"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - notabene-network

  app:
    build: .
    container_name: notabene-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - notabene-network

volumes:
  pgdata:
  pgdata-test:

networks:
  notabene-network:
    driver: bridge